"use strict";class r{static isValidExtension(i){return/^x-/.test(i)}getExtension(i){if(!r.isValidExtension(i))throw new Error(`Invalid specification extension: '${i}'. Extensions must start with prefix 'x-`);return this[i]?this[i]:null}addExtension(i,t){if(!r.isValidExtension(i))throw new Error(`Invalid specification extension: '${i}'. Extensions must start with prefix 'x-`);this[i]=t}listExtensions(){const i=[];for(const t in this)Object.prototype.hasOwnProperty.call(this,t)&&r.isValidExtension(t)&&i.push(t);return i}}function e(s,i){if(s&&r.isValidExtension(i))return s[i]}function o(s,i,t){s&&r.isValidExtension(i)&&(s[i]=t)}class a{constructor(i,t){this.url=i,this.description=t,this.variables={}}addVariable(i,t){this.variables[i]=t}}class l{constructor(i,t,n){this.default=i,this.enum=t,this.description=n}}exports.Server=a;exports.ServerVariable=l;exports.SpecificationExtension=r;exports.addExtension=o;exports.getExtension=e;
//# sourceMappingURL=server-DVBno7Ee.js.map
