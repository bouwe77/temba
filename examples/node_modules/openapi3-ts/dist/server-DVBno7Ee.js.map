{"version":3,"file":"server-DVBno7Ee.js","sources":["../src/model/specification-extension.ts","../src/model/oas-common.ts","../src/model/server.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// Support for Specification Extensions\n// as described in\n// https://github.com/OAI/OpenAPI-Specification/blob/3.0.0-rc0/versions/3.0.md#specificationExtensions\n\n//  Specification Extensions\n//   ^x-\nexport type IExtensionName = `x-${string}`;\nexport type IExtensionType = any;\nexport type ISpecificationExtension = {\n    [extensionName: IExtensionName]: IExtensionType;\n};\n\nexport class SpecificationExtension implements ISpecificationExtension {\n    [extensionName: IExtensionName]: any;\n\n    static isValidExtension(extensionName: string): boolean {\n        return /^x-/.test(extensionName);\n    }\n\n    getExtension(extensionName: string): any {\n        if (!SpecificationExtension.isValidExtension(extensionName)) {\n            throw new Error(\n                `Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`\n            );\n        }\n        if (this[extensionName as IExtensionName]) {\n            return this[extensionName as IExtensionName];\n        }\n        return null;\n    }\n    addExtension(extensionName: string, payload: any): void {\n        if (!SpecificationExtension.isValidExtension(extensionName)) {\n            throw new Error(\n                `Invalid specification extension: '${extensionName}'. Extensions must start with prefix 'x-`\n            );\n        }\n        this[extensionName as IExtensionName] = payload;\n    }\n    listExtensions(): string[] {\n        const res: string[] = [];\n        for (const propName in this) {\n            if (Object.prototype.hasOwnProperty.call(this, propName)) {\n                if (SpecificationExtension.isValidExtension(propName)) {\n                    res.push(propName);\n                }\n            }\n        }\n        return res;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n    IExtensionName,\n    ISpecificationExtension,\n    SpecificationExtension\n} from './specification-extension';\n\nexport interface ServerObject extends ISpecificationExtension {\n    url: string;\n    description?: string;\n    variables?: { [v: string]: ServerVariableObject };\n}\nexport interface ServerVariableObject extends ISpecificationExtension {\n    enum?: string[] | boolean[] | number[];\n    default: string | boolean | number;\n    description?: string;\n}\n\nexport function getExtension(obj: ISpecificationExtension | undefined, extensionName: string): any {\n    if (!obj) {\n        return undefined;\n    }\n    if (SpecificationExtension.isValidExtension(extensionName)) {\n        return obj[extensionName as IExtensionName];\n    }\n    return undefined;\n}\nexport function addExtension(\n    obj: ISpecificationExtension | undefined,\n    extensionName: string,\n    extension: any\n): void {\n    if (obj && SpecificationExtension.isValidExtension(extensionName)) {\n        obj[extensionName as IExtensionName] = extension;\n    }\n}\n","import { ServerObject, ServerVariableObject } from './oas-common';\nimport { IExtensionName, IExtensionType } from './specification-extension';\n\n// Server & Server Variable\nexport class Server implements ServerObject {\n    url: string;\n    description?: string;\n    variables: { [v: string]: ServerVariable };\n    [k: IExtensionName]: IExtensionType;\n\n    constructor(url: string, desc?: string) {\n        this.url = url;\n        this.description = desc;\n        this.variables = {};\n    }\n    addVariable(name: string, variable: ServerVariable): void {\n        this.variables[name] = variable;\n    }\n}\n\nexport class ServerVariable implements ServerVariableObject {\n    enum?: string[] | boolean[] | number[];\n    default: string | boolean | number;\n    description?: string;\n    [k: IExtensionName]: IExtensionType;\n\n    constructor(\n        defaultValue: string | boolean | number,\n        enums?: string[] | boolean[] | number[],\n        description?: string\n    ) {\n        this.default = defaultValue;\n        this.enum = enums;\n        this.description = description;\n    }\n}\n"],"names":["SpecificationExtension","extensionName","payload","res","propName","getExtension","obj","addExtension","extension","Server","url","desc","name","variable","ServerVariable","defaultValue","enums","description"],"mappings":"aAcO,MAAMA,CAA0D,CAGnE,OAAO,iBAAiBC,EAAgC,CAC7C,MAAA,MAAM,KAAKA,CAAa,CACnC,CAEA,aAAaA,EAA4B,CACrC,GAAI,CAACD,EAAuB,iBAAiBC,CAAa,EACtD,MAAM,IAAI,MACN,qCAAqCA,CAAa,0CAAA,EAGtD,OAAA,KAAKA,CAA+B,EAC7B,KAAKA,CAA+B,EAExC,IACX,CACA,aAAaA,EAAuBC,EAAoB,CACpD,GAAI,CAACF,EAAuB,iBAAiBC,CAAa,EACtD,MAAM,IAAI,MACN,qCAAqCA,CAAa,0CAAA,EAG1D,KAAKA,CAA+B,EAAIC,CAC5C,CACA,gBAA2B,CACvB,MAAMC,EAAgB,CAAA,EACtB,UAAWC,KAAY,KACf,OAAO,UAAU,eAAe,KAAK,KAAMA,CAAQ,GAC/CJ,EAAuB,iBAAiBI,CAAQ,GAChDD,EAAI,KAAKC,CAAQ,EAItB,OAAAD,CACX,CACJ,CChCgB,SAAAE,EAAaC,EAA0CL,EAA4B,CAC/F,GAAKK,GAGDN,EAAuB,iBAAiBC,CAAa,EACrD,OAAOK,EAAIL,CAA+B,CAGlD,CACgB,SAAAM,EACZD,EACAL,EACAO,EACI,CACAF,GAAON,EAAuB,iBAAiBC,CAAa,IAC5DK,EAAIL,CAA+B,EAAIO,EAE/C,CChCO,MAAMC,CAA+B,CAMxC,YAAYC,EAAaC,EAAe,CACpC,KAAK,IAAMD,EACX,KAAK,YAAcC,EACnB,KAAK,UAAY,EACrB,CACA,YAAYC,EAAcC,EAAgC,CACjD,KAAA,UAAUD,CAAI,EAAIC,CAC3B,CACJ,CAEO,MAAMC,CAA+C,CAMxD,YACIC,EACAC,EACAC,EACF,CACE,KAAK,QAAUF,EACf,KAAK,KAAOC,EACZ,KAAK,YAAcC,CACvB,CACJ"}