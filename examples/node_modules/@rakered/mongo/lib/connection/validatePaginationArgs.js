"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePaginationArgs = void 0;
const errors_1 = require("@rakered/errors");
function validatePaginationArgs(params) {
    if (!params || typeof params !== 'object') {
        throw new errors_1.UserInputError('You must provide arguments to properly paginate the connection.');
    }
    if (!params.first && !params.last) {
        throw new errors_1.UserInputError('You must provide a `first` or `last` value to properly paginate the connection.');
    }
    if (params.first && params.last) {
        throw new errors_1.UserInputError('Passing both `first` and `last` to paginate the connection is not supported.');
    }
    if (params.last && params.last < 0) {
        throw new errors_1.UserInputError('Last should be non negative.');
    }
    if (params.first && params.first < 0) {
        throw new errors_1.UserInputError('First should be non negative.');
    }
    const [field, direction] = params.order || [];
    if (params.order &&
        (!field || (direction !== 'asc' && direction !== 'desc'))) {
        throw new errors_1.UserInputError('You must provide an `order` to properly paginate the connection.');
    }
}
exports.validatePaginationArgs = validatePaginationArgs;
//# sourceMappingURL=validatePaginationArgs.js.map