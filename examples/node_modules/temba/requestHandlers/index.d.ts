import type { RouterConfig } from '../config/index.js';
import type { CompiledSchemas } from '../schema/types.js';
import type { Queries } from '../data/types.js';
export declare const getRequestHandler: (queries: Queries, schemas: CompiledSchemas, routerConfig: RouterConfig) => {
    handleGet: (req: import("./types.js").GetRequest) => Promise<{
        status: number;
        body: unknown;
        headers?: undefined;
    } | {
        status: number;
        headers: {
            etag: string;
        };
        body?: undefined;
    } | {
        status: number;
        body: unknown;
        headers: {
            etag: string;
        };
    } | {
        status: number;
    }>;
    handlePost: (req: import("./types.js").PostRequest) => Promise<{
        status: number;
        body: {
            message: string;
        };
        headers?: undefined;
    } | {
        headers: {
            Location: string;
        };
        status: number;
        body: unknown;
    }>;
    handlePut: (req: import("./types.js").PutRequest) => Promise<{
        status: number;
        body: unknown;
    }>;
    handlePatch: (req: import("./types.js").PatchRequest) => Promise<{
        status: number;
        body: unknown;
    }>;
    handleDelete: (req: import("./types.js").DeleteRequest) => Promise<{
        status: number;
        body: {
            message: string;
        };
    } | {
        status: number;
        body?: undefined;
    }>;
};
//# sourceMappingURL=index.d.ts.map