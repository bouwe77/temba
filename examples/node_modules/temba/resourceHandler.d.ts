import type { IncomingMessage, ServerResponse } from 'http';
import type { Queries } from './data/types.js';
import type { CompiledSchemas } from './schema/types.js';
import type { RouterConfig } from './config/index.js';
export declare const sendErrorResponse: (res: ServerResponse<IncomingMessage>, statusCode?: number, message?: string) => void;
export declare const handleMethodNotAllowed: (_: IncomingMessage, res: ServerResponse<IncomingMessage>) => void;
export declare const handleNotFound: (_: IncomingMessage, res: ServerResponse<IncomingMessage> & {
    req: IncomingMessage;
}) => void;
export declare const createResourceHandler: (queries: Queries, schemas: CompiledSchemas, routerConfig: RouterConfig) => (req: IncomingMessage, res: ServerResponse<IncomingMessage>) => Promise<void> | undefined;
//# sourceMappingURL=resourceHandler.d.ts.map