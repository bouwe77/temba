export const interceptGetRequest = (intercept, headers, resource, id) => {
    intercept({ headers, resource, id });
};
export const interceptPostRequest = (intercept, headers, resource, id, body) => {
    const intercepted = intercept({ headers, resource, body, id });
    return interceptRequest(intercepted, body);
};
export const interceptPutRequest = (intercept, headers, resource, id, body) => {
    const intercepted = intercept({ headers, resource, id, body });
    return interceptRequest(intercepted, body);
};
export const interceptPatchRequest = interceptPutRequest;
export const interceptDeleteRequest = (intercept, headers, resource, id) => {
    intercept({ headers, resource, id });
};
const interceptRequest = (intercepted, body) => {
    if (!intercepted && typeof body === 'object')
        return body;
    // The request body was replaced by an object
    if (intercepted && typeof intercepted === 'object' && !Array.isArray(intercepted))
        return intercepted;
    // The request body was replaced by something else than an object.
    // This is not supported, so we return the original request body.
    return body;
};
//# sourceMappingURL=interceptRequest.js.map